name: OWASP ZAP Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Timeout para o job inteiro

    steps:
      # 1Ô∏è‚É£ Clona o reposit√≥rio
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Instala PHP
      - name: Instalar PHP
        run: |
          sudo apt-get update
          sudo apt-get install -y php

      # 3Ô∏è‚É£ Inicia servidor PHP embutido
      - name: Iniciar servidor PHP
        run: |
          php -S localhost:8080 -t src &
          echo $! > php_server.pid
          sleep 5
          # Verifica se o servidor est√° rodando
          for i in {1..10}; do
            if curl -s http://localhost:8080 > /dev/null; then
              echo "Servidor PHP rodando!"
              break
            fi
            echo "Aguardando servidor... tentativa $i"
            sleep 2
          done

      # 4Ô∏è‚É£ Usa Docker do ZAP (mais confi√°vel)
      - name: Executar OWASP ZAP Baseline Scan
        timeout-minutes: 15
        continue-on-error: true
        run: |
          # Cria diret√≥rio reports no workspace
          cd ${{ github.workspace }}
          mkdir -p reports
          chmod -R 777 reports
          
          echo "üìÇ Diret√≥rio criado: $(pwd)/reports"
          echo "üìÇ Caminho absoluto: ${{ github.workspace }}/reports"
          
          # Verifica se servidor est√° acess√≠vel
          echo "üß™ Testando servidor..."
          curl -I http://localhost:8080 || echo "‚ùå Servidor n√£o responde"
          
          echo "üîç Iniciando ZAP Scan..."
          
          # Roda ZAP
          docker run --rm --network="host" \
            -v "${{ github.workspace }}/reports:/zap/wrk:rw" \
            -t ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
            -t http://localhost:8080 \
            -r report.html \
            -J report.json \
            -w report.md \
            -I || echo "‚ö†Ô∏è ZAP finalizou com c√≥digo: $?"
          
          echo ""
          echo "‚úÖ Scan finalizado!"
          echo "üìã Listando conte√∫do do diret√≥rio reports:"
          ls -lah "${{ github.workspace }}/reports/"
          
          echo ""
          echo "üìã Verificando se arquivos existem:"
          test -f "${{ github.workspace }}/reports/report.html" && echo "‚úÖ report.html existe" || echo "‚ùå report.html N√ÉO existe"
          test -f "${{ github.workspace }}/reports/report.json" && echo "‚úÖ report.json existe" || echo "‚ùå report.json N√ÉO existe"
          test -f "${{ github.workspace }}/reports/report.md" && echo "‚úÖ report.md existe" || echo "‚ùå report.md N√ÉO existe"

      # 5Ô∏è‚É£ Debug - Verificar se servidor est√° acess√≠vel
      - name: Testar acesso ao servidor
        if: always()
        run: |
          echo "Testando servidor PHP..."
          curl -v http://localhost:8080 || echo "‚ùå Servidor n√£o est√° respondendo"
          echo "Processos PHP rodando:"
          ps aux | grep php || echo "Nenhum processo PHP encontrado"

      # 6Ô∏è‚É£ Verificar se o relat√≥rio foi gerado
      - name: Verificar relat√≥rios gerados
        if: always()
        run: |
          echo "üìÅ Conte√∫do do diret√≥rio reports (absoluto):"
          ls -lah ${{ github.workspace }}/reports/ || echo "Diret√≥rio n√£o existe"
          
          echo ""
          echo "üìÅ Conte√∫do do diret√≥rio reports (relativo):"
          ls -lah reports/ || echo "Diret√≥rio n√£o existe"
          
          echo ""
          echo "üìÅ Buscando arquivos de relat√≥rio em todo workspace:"
          find ${{ github.workspace }} -name "report.*" -type f
          
          echo ""
          if [ -f "reports/report.html" ]; then
            echo "‚úÖ Relat√≥rio HTML encontrado!"
            echo "Tamanho do arquivo:"
            wc -l reports/report.html
          else
            echo "‚ùå Relat√≥rio HTML n√£o encontrado no diret√≥rio esperado"
          fi

      # 6Ô∏è‚É£ Faz upload do relat√≥rio (sempre executa)
      - name: Upload do relat√≥rio ZAP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: ${{ github.workspace }}/reports/
          
      # 7Ô∏è‚É£ Cleanup
      - name: Parar servidor PHP
        if: always()
        run: |
          if [ -f php_server.pid ]; then
            kill $(cat php_server.pid) || true
          fi